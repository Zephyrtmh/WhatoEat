{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zephy\\\\OneDrive\\\\Documents\\\\Personal\\\\Coding\\\\Coding Projects\\\\WhatoEat\\\\src\\\\components\\\\ListFilters.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport Filter from './Filter';\nimport { FoodContext } from '../Context/FoodContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListFilters(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [filterAllList, setFilterList] = useState([]);\n  const [toFilter, setToFilter] = useState(true);\n  const [activeFilters, setActiveFilters] = useState({\n    \"filters\": [\"soup\", \"halal\"],\n    \"values\": [false, false]\n  });\n  const [possibleFoodItems, setPossibleFoodItems] = useState([]);\n  let context = useContext(FoodContext);\n  let filterReferences = {};\n\n  function createOrGetRef(id) {\n    _s();\n\n    if (!filterReferences[id]) {\n      filterReferences[id] = useRef();\n    }\n\n    return filterReferences[id];\n  }\n\n  _s(createOrGetRef, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n\n  const getFilters = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/filters/\");\n      const jsonData = await response.json();\n      const filters = jsonData.map((filter, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: filter,\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          filterName: filter.filter_name,\n          toFilter: toFilter,\n          getActiveFilters: getActiveFilters,\n          ref: createOrGetRef(filter.index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this));\n      setFilterList(filters);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleNoFilter = () => {\n    setToFilter(!toFilter);\n    console.log(\"toFilter set to\" + !toFilter);\n  };\n\n  const getActiveFilters = (filterName, value) => {\n    filterList.push(filterName);\n    filterListValues.push(value);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      filterRef.current.state.console.log(activeFilters); // console.log(activeFilters)\n\n      const response = await fetch(\"http://localhost:5000/submit\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(activeFilters)\n      });\n      let resJson = response.json(); // let foodNames = resJson.map((foodName) => console.log(foodName));\n\n      resJson.then(data => {\n        let food_names = [];\n\n        for (let food in data) {\n          food_names.push(data[food].food_name);\n        }\n\n        setPossibleFoodItems(food_names);\n        context.setFoodItem(possibleFoodItems);\n        console.log(possibleFoodItems);\n      });\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  const foodContext = /*#__PURE__*/React.createContext('');\n  useEffect(() => {\n    getFilters();\n  });\n  let noFilterClassName = toFilter ? \"no-filter-button-unselected\" : \"no-filter-button-selected\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"filters-interface-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: noFilterClassName,\n      onClick: handleNoFilter,\n      children: \"No filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"filter-list\",\n      children: filterAllList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ListFilters, \"KGsdrjMHM9pqEl1eRzTjJAvkR1M=\");\n\n_c = ListFilters;\nexport default ListFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListFilters\");","map":{"version":3,"sources":["C:/Users/Zephy/OneDrive/Documents/Personal/Coding/Coding Projects/WhatoEat/src/components/ListFilters.js"],"names":["React","useContext","useEffect","useRef","useState","Filter","FoodContext","ListFilters","props","filterAllList","setFilterList","toFilter","setToFilter","activeFilters","setActiveFilters","possibleFoodItems","setPossibleFoodItems","context","filterReferences","createOrGetRef","id","getFilters","response","fetch","jsonData","json","filters","map","filter","index","filter_name","getActiveFilters","err","console","error","handleNoFilter","log","filterName","value","filterList","push","filterListValues","handleSubmit","filterRef","current","state","method","headers","body","JSON","stringify","resJson","then","data","food_names","food","food_name","setFoodItem","message","foodContext","createContext","noFilterClassName"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport Filter from './Filter';\r\nimport { FoodContext } from '../Context/FoodContext';\r\n\r\nfunction ListFilters(props) {\r\n\r\n    const [filterAllList, setFilterList] = useState([]);\r\n    const [toFilter, setToFilter] = useState(true);\r\n    const [activeFilters, setActiveFilters] = useState({ \"filters\": [\"soup\", \"halal\"], \"values\": [false, false] });\r\n    const [possibleFoodItems, setPossibleFoodItems] = useState([])\r\n\r\n\r\n    let context = useContext(FoodContext);\r\n\r\n    let filterReferences = {};\r\n    function createOrGetRef(id) {\r\n        if (!filterReferences[id]) {\r\n            filterReferences[id] = useRef();\r\n        }\r\n        return filterReferences[id];\r\n    }\r\n\r\n    const getFilters = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/filters/\");\r\n            const jsonData = await response.json();\r\n            const filters = jsonData.map((filter, index) => \r\n            <li id={filter}><Filter filterName={filter.filter_name} toFilter={toFilter} getActiveFilters={getActiveFilters} ref={createOrGetRef(filter.index)}/></li>\r\n            );\r\n            setFilterList(filters);\r\n            \r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleNoFilter = () => {\r\n        setToFilter(!toFilter);\r\n        console.log(\"toFilter set to\"+!toFilter);\r\n    }\r\n\r\n    const getActiveFilters = (filterName, value) => {\r\n        filterList.push(filterName);\r\n        filterListValues.push(value);\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            filterRef.current.state.\r\n            console.log(activeFilters)\r\n            // console.log(activeFilters)\r\n            const response = await fetch(\"http://localhost:5000/submit\", { method:'POST', headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}, body: JSON.stringify(activeFilters)});\r\n            let resJson = response.json();\r\n            // let foodNames = resJson.map((foodName) => console.log(foodName));\r\n            resJson.then((data) => {\r\n                let food_names = [];\r\n                for (let food in data) {\r\n                    food_names.push(data[food].food_name);\r\n                }\r\n                setPossibleFoodItems(food_names);\r\n                context.setFoodItem(possibleFoodItems);\r\n                console.log(possibleFoodItems)\r\n            });\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const foodContext = React.createContext('');\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        getFilters();\r\n    });\r\n\r\n    let noFilterClassName = toFilter ? \"no-filter-button-unselected\" : \"no-filter-button-selected\";\r\n\r\n    return (\r\n        <div id=\"filters-interface-container\">\r\n            <button className={noFilterClassName} onClick={handleNoFilter}>No filter</button>\r\n            <ul id=\"filter-list\">\r\n                {filterAllList}\r\n            </ul>\r\n            <button className=\"submit-button\" onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListFilters"]},"metadata":{},"sourceType":"module"}