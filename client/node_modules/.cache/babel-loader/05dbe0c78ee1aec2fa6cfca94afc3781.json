{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zephy\\\\OneDrive\\\\Documents\\\\Personal\\\\Coding\\\\Coding Projects\\\\WhatoEat\\\\client\\\\src\\\\components\\\\ListFilters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport Filter from './Filter';\nimport { FoodContext } from '../Context/FoodContext';\nimport { random_food, convertFiltersFormat } from '../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListFilters(props) {\n  _s();\n\n  const [filterAllList, setFilterList] = useState([]);\n  const [toFilter, setToFilter] = useState(true);\n  const [activeFilters, setActiveFilters] = useState({\n    \"halal\": 'either'\n  });\n  let context = useContext(FoodContext);\n\n  const handleFilterSelection = (filterName, value) => {\n    activeFilters[filterName] = value;\n    setActiveFilters(activeFilters);\n  };\n\n  const handleNoFilter = () => {\n    setToFilter(!toFilter);\n    console.log(\"toFilter set to \" + !toFilter);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const convertedActiveFilters = convertFiltersFormat(activeFilters);\n      const response = await fetch(\"/submit\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(convertedActiveFilters)\n      });\n      let resJson = response.json(); // let foodNames = resJson.map((foodName) => console.log(foodName));\n\n      await resJson.then(data => {\n        let food_names = [];\n\n        for (let food in data) {\n          food_names.push(data[food].food_name);\n        }\n\n        let rand_food = random_food(food_names);\n        console.log(food_names);\n        console.log(rand_food);\n        random_food(food_names).then(food => {\n          context.setFoodItem(food);\n        });\n      });\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  const foodContext = /*#__PURE__*/React.createContext('');\n  let foodFilters = [];\n  useEffect(() => {\n    const getFilters = async () => {\n      try {\n        // need to add check to prevent infinite loop\n        const response = await fetch(\"/filters/\");\n        const jsonData = await response.json();\n        const filters = jsonData.map(filter => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: filter,\n          children: /*#__PURE__*/_jsxDEV(Filter, {\n            filterName: filter.filter_name,\n            toFilter: toFilter,\n            handleFilterSelection: handleFilterSelection\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this));\n        setFilterList(filters);\n        let someObj = {};\n        await jsonData.forEach(async element => {\n          someObj[element.filter_name] = 'either'; // activeFilters[element.food_name] = 'either';\n        }); // console.log(someObj);\n\n        setActiveFilters(someObj);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getFilters();\n  }, [toFilter]);\n  let noFilterClassName = toFilter ? \"no-filter-button-unselected\" : \"no-filter-button-selected\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"filters-interface-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: noFilterClassName,\n      onClick: handleNoFilter,\n      children: \"Remove filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"filter-list\",\n      children: filterAllList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListFilters, \"CEP+HVCrzZjdX30MwMio03HVCpE=\");\n\n_c = ListFilters;\nexport default ListFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListFilters\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","Filter","FoodContext","random_food","convertFiltersFormat","ListFilters","props","filterAllList","setFilterList","toFilter","setToFilter","activeFilters","setActiveFilters","context","handleFilterSelection","filterName","value","handleNoFilter","console","log","handleSubmit","convertedActiveFilters","response","fetch","method","headers","body","JSON","stringify","resJson","json","then","data","food_names","food","push","food_name","rand_food","setFoodItem","err","message","foodContext","createContext","foodFilters","getFilters","jsonData","filters","map","filter","filter_name","someObj","forEach","element","error","noFilterClassName"],"sources":["C:/Users/Zephy/OneDrive/Documents/Personal/Coding/Coding Projects/WhatoEat/client/src/components/ListFilters.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport Filter from './Filter';\r\nimport { FoodContext } from '../Context/FoodContext';\r\nimport { random_food, convertFiltersFormat } from '../utils/utils';\r\n\r\nfunction ListFilters(props) {\r\n\r\n    const [filterAllList, setFilterList] = useState([]);\r\n    const [toFilter, setToFilter] = useState(true);\r\n    const [activeFilters, setActiveFilters] = useState({\"halal\": 'either'});\r\n\r\n\r\n    let context = useContext(FoodContext);\r\n\r\n\r\n\r\n\r\n    const handleFilterSelection = (filterName, value) => {\r\n        activeFilters[filterName] = value;\r\n        setActiveFilters(activeFilters);\r\n    }\r\n\r\n    const handleNoFilter = () => {\r\n        setToFilter(!toFilter);\r\n        console.log(\"toFilter set to \"+!toFilter);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const convertedActiveFilters = convertFiltersFormat(activeFilters);\r\n            const response = await fetch(\"/submit\", { method:'POST', headers: {'Accept': 'application/json', 'Content-Type': 'application/json'}, body: JSON.stringify(convertedActiveFilters)});\r\n            let resJson = response.json();\r\n            // let foodNames = resJson.map((foodName) => console.log(foodName));\r\n            await resJson.then((data) => {\r\n                let food_names = [];\r\n                for (let food in data) {\r\n                    food_names.push(data[food].food_name);\r\n                }\r\n                let rand_food = random_food(food_names);\r\n                console.log(food_names);\r\n                console.log(rand_food);\r\n                random_food(food_names).then((food) => {\r\n                    context.setFoodItem(food);\r\n                })\r\n            \r\n            });\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n        \r\n    }\r\n\r\n    const foodContext = React.createContext('');\r\n\r\n    let foodFilters = []\r\n    \r\n\r\n    useEffect(() => {\r\n        const getFilters = async () => {\r\n            try {\r\n                // need to add check to prevent infinite loop\r\n                \r\n                const response = await fetch(\"/filters/\");\r\n                const jsonData = await response.json();\r\n                const filters = jsonData.map((filter) => \r\n                <li id={filter}><Filter filterName={filter.filter_name} toFilter={toFilter} handleFilterSelection={handleFilterSelection}/></li>\r\n                );\r\n                setFilterList(filters);\r\n                let someObj = {}\r\n                await jsonData.forEach(async (element) => {\r\n                    someObj[element.filter_name] = 'either';\r\n                    // activeFilters[element.food_name] = 'either';\r\n                })\r\n                // console.log(someObj);\r\n                setActiveFilters(someObj);        \r\n                \r\n                \r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n        getFilters();\r\n    }, [toFilter]);\r\n\r\n    let noFilterClassName = toFilter ? \"no-filter-button-unselected\" : \"no-filter-button-selected\";\r\n\r\n    return (\r\n        <div id=\"filters-interface-container\">\r\n            <button className={noFilterClassName} onClick={handleNoFilter}>Remove filters</button>\r\n            <ul id=\"filter-list\">\r\n                {filterAllList}\r\n            </ul>\r\n            <button className=\"submit-button\" onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListFilters"],"mappings":"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"},"metadata":{},"sourceType":"module"}